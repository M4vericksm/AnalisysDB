DELIMITER $$

CREATE PROCEDURE gerar_dados_vendas_2022_2023()
BEGIN
    DECLARE ano_atual INT DEFAULT 2022;
    DECLARE mes_atual INT DEFAULT 1;
    DECLARE id_venda_atual INT;
    DECLARE numero_venda_atual VARCHAR(20);
    DECLARE dias_no_mes INT;
    DECLARE dia_random INT;
    DECLARE data_venda DATE;
    DECLARE qtd_vendas_mes INT;
    DECLARE i INT DEFAULT 0;
    DECLARE j INT DEFAULT 0;
    DECLARE id_cliente INT;
    DECLARE id_loja INT;
    DECLARE id_funcionario INT;
    DECLARE id_produto INT;
    DECLARE quantidade INT;
    DECLARE preco_unitario DECIMAL(10,2);
    DECLARE desconto DECIMAL(10,2);
    DECLARE valor_total_item DECIMAL(10,2);
    DECLARE valor_total_venda DECIMAL(10,2);
    DECLARE forma_pagamento VARCHAR(30);
    DECLARE status_venda VARCHAR(20) DEFAULT 'Finalizada';
    DECLARE formas_pagamento JSON DEFAULT '["Cartão Crédito", "PIX", "Cartão Débito", "Dinheiro"]';
    DECLARE promocao_ativa BOOLEAN DEFAULT FALSE;
    DECLARE percentual_desconto_promocao DECIMAL(5,2) DEFAULT 0.00;

    -- Obter última venda para continuar sequência
    SELECT COALESCE(MAX(id_venda), 0) INTO id_venda_atual FROM venda;
    SELECT COALESCE(MAX(numero_venda), 'VD202201000') INTO numero_venda_atual FROM venda;

    WHILE ano_atual <= 2023 DO
        WHILE mes_atual <= 12 DO

            -- Definição da quantidade média de vendas por mês
            CASE
                WHEN mes_atual IN (1, 3, 5, 7, 8, 9, 10, 12) THEN SET qtd_vendas_mes = FLOOR(20 + RAND() * 10); -- Meses normais
                WHEN mes_atual IN (4, 6, 11) THEN SET qtd_vendas_mes = FLOOR(15 + RAND() * 5); -- Meses mais calmos
                WHEN mes_atual = 2 THEN SET qtd_vendas_mes = FLOOR(10 + RAND() * 5); -- Fevereiro
            END CASE;

            -- Verifica se há promoção ativa
            IF mes_atual IN (1, 3, 5, 11) THEN
                SET promocao_ativa = TRUE;
                CASE mes_atual
                    WHEN 1 THEN SET percentual_desconto_promocao = 30.00; -- Liquida Verão
                    WHEN 3 THEN SET percentual_desconto_promocao = 10.00; -- Semana do Consumidor
                    WHEN 5 THEN SET percentual_desconto_promocao = 25.00; -- Dia das Mães
                    WHEN 11 THEN SET percentual_desconto_promocao = 20.00; -- Black Friday
                END CASE;
            ELSE
                SET promocao_ativa = FALSE;
                SET percentual_desconto_promocao = 0.00;
            END IF;

            SET i = 0;
            WHILE i < qtd_vendas_mes DO

                -- Gera data aleatória no mês
                SET dias_no_mes = DAY(LAST_DAY(CONCAT(ano_atual, '-', mes_atual, '-01')));
                SET dia_random = FLOOR(1 + RAND() * dias_no_mes);
                SET data_venda = CONCAT(ano_atual, '-', LPAD(mes_atual, 2, '0'), '-', LPAD(dia_random, 2, '0'));

                -- Seleciona cliente, loja e funcionário aleatoriamente
                SELECT id_cliente INTO id_cliente FROM cliente ORDER BY RAND() LIMIT 1;
                SELECT id_loja INTO id_loja FROM loja ORDER BY RAND() LIMIT 1;
                SELECT id_funcionario INTO id_funcionario FROM funcionario WHERE id_loja = id_loja ORDER BY RAND() LIMIT 1;

                -- Seleciona forma de pagamento
                SELECT JSON_UNQUOTE(JSON_EXTRACT(formas_pagamento, CONCAT('$[', FLOOR(RAND() * 4), ']'))) INTO forma_pagamento;

                -- Insere venda
                SET id_venda_atual = id_venda_atual + 1;
                SET numero_venda_atual = CONCAT('VD', ano_atual, LPAD(mes_atual, 2, '0'), LPAD(id_venda_atual % 100 + 1, 3, '0'));
                INSERT INTO venda (
                    id_venda,
                    numero_venda,
                    id_cliente,
                    id_loja,
                    id_funcionario,
                    data_venda,
                    valor_total,
                    desconto_total,
                    forma_pagamento,
                    status_venda
                ) VALUES (
                    id_venda_atual,
                    numero_venda_atual,
                    id_cliente,
                    id_loja,
                    id_funcionario,
                    data_venda,
                    0, -- Será atualizado depois
                    0, -- Será atualizado depois
                    forma_pagamento,
                    status_venda
                );

                SET valor_total_venda = 0;

                -- Gera entre 1 a 4 itens por venda
                SET j = 0;
                WHILE j < FLOOR(1 + RAND() * 4) DO

                    -- Seleciona produto aleatório
                    SELECT id_produto INTO id_produto FROM produto ORDER BY RAND() LIMIT 1;
                    SELECT preco_atual INTO preco_unitario FROM produto WHERE id_produto = id_produto;

                    -- Define quantidade
                    SET quantidade = FLOOR(1 + RAND() * 3);

                    -- Aplica desconto se estiver em promoção
                    IF promocao_ativa THEN
                        SET desconto = preco_unitario * percentual_desconto_promocao / 100;
                    ELSE
                        SET desconto = 0;
                    END IF;

                    SET valor_total_item = ROUND((preco_unitario - desconto) * quantidade, 2);

                    -- Insere item da venda
                    INSERT INTO item_venda (
                        id_venda,
                        id_produto,
                        quantidade,
                        preco_unitario,
                        desconto,
                        valor_total
                    ) VALUES (
                        id_venda_atual,
                        id_produto,
                        quantidade,
                        preco_unitario,
                        desconto,
                        valor_total_item
                    );

                    SET valor_total_venda = valor_total_venda + valor_total_item;

                    SET j = j + 1;
                END WHILE;

                -- Atualiza venda com totais
                UPDATE venda
                SET valor_total = valor_total_venda,
                    desconto_total = ROUND(valor_total_venda * percentual_desconto_promocao / 100, 2)
                WHERE id_venda = id_venda_atual;

                SET i = i + 1;
            END WHILE;

            SET mes_atual = mes_atual + 1;
        END WHILE;

        SET ano_atual = ano_atual + 1;
        SET mes_atual = 1;
    END WHILE;

END$$

DELIMITER ;